rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isAdmin() || isOwner(userId);
      allow write: if isOwner(userId);
      allow update: if isAdmin() || isOwner(userId);
    }
    
    // Admin courses collection (templates created by admin)
    match /adminCourses/{courseId} {
      allow read: if request.auth != null;
      allow write, update, delete: if isAdmin();
    }
    
    // Institution course applications
    match /institutionCourseApplications/{applicationId} {
      allow read: if isAdmin() || (request.auth != null && resource.data.institutionId == request.auth.uid);
      allow write: if request.auth != null;
      allow update: if isAdmin() || (request.auth != null && resource.data.institutionId == request.auth.uid);
      allow delete: if isAdmin();
    }
    
    // Courses collection (approved courses from institutions)
    match /courses/{courseId} {
      allow read: if true;
      allow write: if isAdmin();
      allow update: if isAdmin() || (request.auth != null && resource.data.institutionId == request.auth.uid);
      allow delete: if isAdmin();
    }
    
    // Student course applications
    match /studentCourseApplications/{applicationId} {
      allow read: if isAdmin() || 
                   (request.auth != null && resource.data.studentId == request.auth.uid) ||
                   (request.auth != null && resource.data.institutionId == request.auth.uid);
      allow write: if request.auth != null;
      allow update: if isAdmin() || (request.auth != null && resource.data.institutionId == request.auth.uid);
      allow delete: if isAdmin();
    }
    
    // Document verification collection
    match /documentVerifications/{verificationId} {
      allow read: if isAdmin() || (request.auth != null && resource.data.userId == request.auth.uid);
      allow write: if request.auth != null;
      allow update, delete: if isAdmin();
    }
    
    // Feedback collection
    match /feedback/{feedbackId} {
      allow read, delete: if isAdmin();
      allow write: if true;
    }
    
    // Contacts collection
    match /contacts/{contactId} {
      allow read, delete: if isAdmin();
      allow write: if true;
    }
  }
}